# Python CircleCI 2.0 configuration file
version: 2.1
jobs:
  test:
    docker:
      - image: cimg/ruby:2.6
    resource_class: large
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: test-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install Ruby dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle
          no_output_timeout: 20m
      - save_cache:
          key: test-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Build the Jekyll site
          command: bundle exec jekyll build
          no_output_timeout: 20m
      - run:
          name: Test the HTML
          command: bash scripts/test/html_proofer_staging.sh
          no_output_timeout: 30m
  deploy_prod:
    docker:
      - image: cimg/ruby:2.6
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: test-dependencies-{{ checksum "Gemfile" }}
      - run:
          name: Install Ruby dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle
      - save_cache:
          key: test-dependencies-{{ checksum "Gemfile" }}
          paths:
            - vendor/bundle
      - run:
          name: Build the Jekyll site
          command: JEKYLL_ENV=production bundle exec jekyll build --config _config.yml,_config_prod.yml
      - run:
          name: Test the HTML
          command: bash scripts/test/html_proofer_prod.sh
      - add_ssh_keys:
          fingerprints:
            - "43:16:d3:f9:bf:1f:2f:ac:c9:9d:b0:5a:6d:fb:42:1f"
      - run:
          name: Deploy to Github
          command: bash scripts/deploy/circleci/deploy_prod.sh
  deploy_prod_server:
    docker:
      - image: cimg/ruby:2.6
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: test-dependencies-{{ checksum "Gemfile" }}
      - run:
          name: Install Ruby dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle
      - save_cache:
          key: test-dependencies-{{ checksum "Gemfile" }}
          paths:
            - vendor/bundle
      - run:
          name: Build the Jekyll site
          command: JEKYLL_ENV=production bundle exec jekyll build --config _config.yml,_config_prod.yml
      - run:
          name: Test the HTML
          command: bash scripts/test/html_proofer_prod.sh
      - add_ssh_keys:
          fingerprints:
            - "6b:a9:5c:8e:32:74:2f:d0:f7:e4:e2:75:ea:dc:09:ac"
      - run:
          name: Deploy to server
          command: bash scripts/deploy/circleci/deploy_prod_server.sh
  deploy_staging:
    docker:
      - image: cimg/ruby:2.6
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: test-dependencies-{{ checksum "Gemfile" }}
      - run:
          name: Install dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle
      - save_cache:
          key: test-dependencies-{{ checksum "Gemfile" }}
          paths:
            - vendor/bundle
      - run:
          name: Build the Jekyll site
          command: bundle exec jekyll build
      - run:
          name: Test the HTML
          command: bash scripts/test/html_proofer_staging.sh
      - add_ssh_keys:
          fingerprints:
            - "43:16:d3:f9:bf:1f:2f:ac:c9:9d:b0:5a:6d:fb:42:1f"
      - run:
          name: Deploy to Github
          command: bash scripts/deploy/circleci/deploy_staging.sh
workflows:
  version: 2
  test:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - master
                - develop
                - gh-pages
                - prod-pages
  deploy:
    jobs:
      - deploy_prod:
          filters:
            branches:
              only: master
      #- deploy_prod_server:
      #    filters:
      #      branches:
      #        only: master
      - deploy_staging:
          filters:
            branches:
              only: develop
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only: develop
    jobs:
      - deploy_staging
